{"version":3,"file":"static/js/164.dd3d524a.chunk.js","mappings":"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","sources":["config/variables.js","Pages/UserPages/Login/index.js","Pages/UserPages/LoginBoxed/index.js","Pages/UserPages/Register/index.js","Pages/UserPages/RegisterOTP/index.js","Pages/UserPages/RegisterBoxed/index.js","Pages/UserPages/ForgotPassword/index.js","Pages/UserPages/ChangePassword/index.js","Pages/UserPages/ForgotPasswordBoxed/index.js","Pages/UserPages/NewAccountCreated/index.js","Pages/UserPages/UpdateUser/index.js","Pages/UserPages/index.js"],"sourcesContent":["export const baseURL = 'https://pivitle-server.onrender.com/api';","import React, { Fragment, Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../../../config/variables\";\r\nimport { setUser } from \"../../../reducers/Auth\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Slider from \"react-slick\";\r\n\r\nimport bg1 from \"../../../assets/utils/images/originals/city.jpg\";\r\nimport bg2 from \"../../../assets/utils/images/originals/citydark.jpg\";\r\nimport bg3 from \"../../../assets/utils/images/originals/citynights.jpg\";\r\n\r\nimport {\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      formData: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n      formErrors: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      arrows: true,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      fade: true,\r\n      initialSlide: 0,\r\n      autoplay: true,\r\n      adaptiveHeight: true,\r\n    };\r\n\r\n    let { user, setUser, Authorization } = this.props;\r\n\r\n    if (localStorage.getItem(\"Authorization\")) this.props.history.push(\"/home\");\r\n    \r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      this.setState({\r\n        ...this.state,\r\n        formData: {\r\n          ...this.state.formData,\r\n          [name]: value,\r\n        },\r\n      });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n      \r\n      e.preventDefault();\r\n\r\n      const errors = validateForm(this.state.formData);\r\n\r\n      if (Object.keys(errors).length === 0) {\r\n        try {\r\n          const response = await axios.post(baseURL + \"/auth/login\", {\r\n            email: this.state.formData.email,\r\n            password: this.state.formData.password,\r\n          });\r\n          \r\n\r\n          localStorage.setItem(\r\n            \"Authorization\",\r\n            response.data.data.Authorization\r\n          );\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data.data.data));\r\n\r\n          setUser(response.data.data);\r\n          toast.success(\r\n            `Welcome ${\r\n              response.data.data.data.firstName +\r\n              \" \" +\r\n              response.data.data.data.lastName\r\n            }`\r\n          );\r\n\r\n          this.setState({\r\n            formData: {\r\n              email: \"\",\r\n              password: \"\",\r\n            },\r\n            formErrors: {\r\n              email: \"\",\r\n              password: \"\",\r\n            },\r\n          });\r\n          this.props.history.push(\"/home\");\r\n        } catch (err) {\r\n          toast.error(err.response.data.message);\r\n          this.setState({\r\n            ...this.state,\r\n            formErrors: {\r\n              ...err,\r\n            },\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          ...this.state,\r\n          formErrors: {\r\n            ...errors,\r\n          },\r\n        });\r\n      }\r\n    };\r\n\r\n    const validateForm = (data) => {\r\n      let errors = {};\r\n      if (!data.password.trim()) {\r\n        errors.password = \"Password is required.\";\r\n      }\r\n      if (!data.email.trim()) {\r\n        errors.email = \"Email is required.\";\r\n      } else if (!isValidEmail(data.email)) {\r\n        errors.email = \"Invalid email address.\";\r\n      }\r\n      return errors;\r\n    };\r\n\r\n    const isValidEmail = (email) => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return emailRegex.test(email);\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"h-100\">\r\n          <Row className=\"h-100 g-0\">\r\n            <Col lg=\"4\" className=\"d-none d-lg-block\">\r\n              <div className=\"slider-light\">\r\n                <Slider {...settings}>\r\n                  <div className=\"h-100 d-flex justify-content-center align-items-center bg-plum-plate\">\r\n                    <div\r\n                      className=\"slide-img-bg\"\r\n                      style={{\r\n                        backgroundImage: \"url(\" + bg1 + \")\",\r\n                      }}\r\n                    />\r\n                    <div className=\"slider-content\">\r\n                      <h3>Perfect Balance</h3>\r\n                      <p>\r\n                        ArchitectUI is like a dream. Some think it's too good to\r\n                        be true! Extensive collection of unified React Boostrap\r\n                        Components and Elements.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"h-100 d-flex justify-content-center align-items-center bg-premium-dark\">\r\n                    <div\r\n                      className=\"slide-img-bg\"\r\n                      style={{\r\n                        backgroundImage: \"url(\" + bg3 + \")\",\r\n                      }}\r\n                    />\r\n                    <div className=\"slider-content\">\r\n                      <h3>Scalable, Modular, Consistent</h3>\r\n                      <p>\r\n                        Easily exclude the components you don't require.\r\n                        Lightweight, consistent Bootstrap based styles across\r\n                        all elements and components\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"h-100 d-flex justify-content-center align-items-center bg-sunny-morning\">\r\n                    <div\r\n                      className=\"slide-img-bg opacity-6\"\r\n                      style={{\r\n                        backgroundImage: \"url(\" + bg2 + \")\",\r\n                      }}\r\n                    />\r\n                    <div className=\"slider-content\">\r\n                      <h3>Complex, but lightweight</h3>\r\n                      <p>\r\n                        We've included a lot of components that cover almost all\r\n                        use cases for any type of application.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Slider>\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              lg=\"8\"\r\n              md=\"12\"\r\n              className=\"h-100 d-flex bg-white justify-content-center align-items-center\"\r\n            >\r\n              <Col lg=\"9\" md=\"10\" sm=\"12\" className=\"mx-auto app-login-box\">\r\n                <div className=\"app-logo\" />\r\n                <h4 className=\"mb-0\">\r\n                  <div>Welcome back,</div>\r\n                  <span>Please sign in to your account.</span>\r\n                </h4>\r\n                <h6 className=\"mt-3\">\r\n                  No account?{\" \"}\r\n                  <a href=\"#/pages/register\" className=\"text-primary\">\r\n                    Sign up now\r\n                  </a>\r\n                </h6>\r\n                <Row className=\"divider\" />\r\n                <div>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"exampleEmail\">Email</Label>\r\n                          <Input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"exampleEmail\"\r\n                            placeholder=\"Email here...\"\r\n                            value={this.state.formData.email}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.email}\r\n                          />\r\n                          {this.state.formErrors.email && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.email}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"examplePassword\">Password</Label>\r\n                          <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"examplePassword\"\r\n                            placeholder=\"Password here...\"\r\n                            value={this.state.formData.password}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.password}\r\n                          />\r\n                          {this.state.formErrors.password && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.password}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <FormGroup check>\r\n                      <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\" />\r\n                      <Label for=\"exampleCheck\" check>\r\n                        Keep me logged in\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <Row className=\"divider\" />\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <div className=\"ms-auto\">\r\n                        <a\r\n                          href=\"#/pages/forgot-password\"\r\n                          className=\"btn-lg btn btn-link\"\r\n                        >\r\n                          Recover Password\r\n                        </a>{\" \"}\r\n                        <Button color=\"primary\" size=\"lg\" type=\"submit\">\r\n                          Login to Dashboard\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                    <ToastContainer />\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.Auth.user,\r\n  Authorization: state.Auth.Authorization,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setUser: (user) => dispatch(setUser(user)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Fragment } from \"react\";\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n// Layout\r\n\r\nconst LoginBoxed = ({ match }) => (\r\n  <Fragment>\r\n    <div className=\"h-100 bg-plum-plate bg-animation\">\r\n      <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n        <Col md=\"8\" className=\"mx-auto app-login-box\">\r\n          <div className=\"app-logo-inverse mx-auto mb-3\" />\r\n          <div className=\"modal-dialog w-100 mx-auto\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-body\">\r\n                <div className=\"h5 modal-title text-center\">\r\n                  <h4 className=\"mt-2\">\r\n                    <div>Welcome back,</div>\r\n                    <span>Please sign in to your account below.</span>\r\n                  </h4>\r\n                </div>\r\n                <Form>\r\n                  <Row form>\r\n                    <Col md={12}>\r\n                      <FormGroup>\r\n                        <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email here...\"/>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                      <FormGroup>\r\n                        <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Password here...\"/>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <FormGroup check>\r\n                    <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\" />\r\n                    <Label for=\"exampleCheck\" check>\r\n                      Keep me logged in\r\n                    </Label>\r\n                  </FormGroup>\r\n                </Form>\r\n                <div className=\"divider\" />\r\n                <h6 className=\"mb-0\">\r\n                  No account?{\" \"}\r\n                  <a href=\"https://colorlib.com/\" onClick={(e) => e.preventDefault()} className=\"text-primary\">\r\n                    Sign up now\r\n                  </a>\r\n                </h6>\r\n              </div>\r\n              <div className=\"modal-footer clearfix\">\r\n                <div className=\"float-start\">\r\n                  <a href=\"https://colorlib.com/\" onClick={(e) => e.preventDefault()} className=\"btn-lg btn btn-link\">\r\n                    Recover Password\r\n                  </a>\r\n                </div>\r\n                <div className=\"float-end\">\r\n                  <Button color=\"primary\" size=\"lg\">\r\n                    Login to Dashboard\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center text-white opacity-8 mt-3\">\r\n            Copyright &copy; ArchitectUI 2019\r\n          </div>\r\n        </Col>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nexport default LoginBoxed;\r\n","import axios from \"axios\";\r\nimport { baseURL } from \"../../../config/variables\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport React, { Fragment, Component } from \"react\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nimport bg3 from \"../../../assets/utils/images/originals/citynights.jpg\";\r\n\r\nimport {\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      formData: {\r\n        email: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        passwordrep: \"\",\r\n      },\r\n      formErrors: {\r\n        email: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        passwordrep: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      arrows: true,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      fade: true,\r\n      initialSlide: 0,\r\n      autoplay: true,\r\n      adaptiveHeight: true,\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      this.setState({\r\n        ...this.state,\r\n        formData: {\r\n          ...this.state.formData,\r\n          [name]: value,\r\n        },\r\n      });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      const errors = validateForm(this.state.formData);\r\n      if (Object.keys(errors).length === 0) {\r\n        try {\r\n          this.setState({\r\n            formErrors: {\r\n              email: \"\",\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              password: \"\",\r\n              passwordrep: \"\",\r\n            },\r\n          });\r\n\r\n          const response = await axios.post(baseURL + \"/user/register\", {\r\n            email: this.state.formData.email,\r\n            firstName: this.state.formData.firstName,\r\n            lastName: this.state.formData.lastName,\r\n            password: this.state.formData.password,\r\n          });\r\n          if (response.data.message == \"Success\")\r\n            toast.success(`OTP has been sent to ${this.state.formData.email}`);\r\n\r\n          this.props.history.push(\r\n            `/pages/verifyUser?email=${this.state.formData.email}`\r\n          );\r\n\r\n          this.setState({\r\n            formData: {\r\n              email: \"\",\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              password: \"\",\r\n              passwordrep: \"\",\r\n            },\r\n          });\r\n        } catch (err) {\r\n          toast.error(err.response.data.message);\r\n          this.setState({\r\n            ...this.state,\r\n            formErrors: {\r\n              ...err,\r\n            },\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          ...this.state,\r\n          formErrors: {\r\n            ...errors,\r\n          },\r\n        });\r\n      }\r\n    };\r\n\r\n    const validateForm = (data) => {\r\n      let errors = {};\r\n      if (!data.firstName.trim()) {\r\n        errors.firstName = \"First Name is required.\";\r\n      }\r\n      if (!data.lastName.trim()) {\r\n        errors.lastName = \"Last Name is required.\";\r\n      }\r\n      if (!data.password) {\r\n        errors.password = \"Password is required.\";\r\n      }\r\n      if (!data.passwordrep) {\r\n        errors.passwordrep = \"Please re-enter password.\";\r\n      } else if (data.password !== data.passwordrep) {\r\n        errors.passwordrep = \"Passwords must match.\";\r\n      }\r\n      if (!data.email.trim()) {\r\n        errors.email = \"Email is required.\";\r\n      } else if (!isValidEmail(data.email)) {\r\n        errors.email = \"Invalid email address.\";\r\n      }\r\n      return errors;\r\n    };\r\n\r\n    const isValidEmail = (email) => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return emailRegex.test(email);\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"h-100\">\r\n          <Row className=\"h-100 g-0\">\r\n            <Col\r\n              lg=\"7\"\r\n              md=\"12\"\r\n              className=\"h-100 d-md-flex d-sm-block bg-white justify-content-center align-items-center\"\r\n            >\r\n              <Col lg=\"9\" md=\"10\" sm=\"12\" className=\"mx-auto app-login-box\">\r\n                <div className=\"app-logo\" />\r\n                <h4>\r\n                  <div>Welcome,</div>\r\n                  <span>\r\n                    It only takes a{\" \"}\r\n                    <span className=\"text-success\">few seconds</span> to create\r\n                    your account\r\n                  </span>\r\n                </h4>\r\n                <div>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"exampleEmail\">\r\n                            <span className=\"text-danger\">*</span> Email\r\n                          </Label>\r\n                          <Input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"exampleEmail\"\r\n                            placeholder=\"Email here...\"\r\n                            value={this.state.email}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.email}\r\n                          />\r\n                          {this.state.formErrors.email && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.email}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"exampleName\">\r\n                            <span className=\"text-danger\">*</span> First Name\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            placeholder=\"First Name here...\"\r\n                            value={this.state.formData.firstName}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.firstName}\r\n                          />\r\n                          {this.state.formErrors.firstName && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.firstName}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"exampleName\">\r\n                            <span className=\"text-danger\">*</span> Last Name\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            placeholder=\"Last Name here...\"\r\n                            value={this.state.formData.lastName}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.lastName}\r\n                          />\r\n                          {this.state.formErrors.lastName && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.lastName}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"examplePassword\">\r\n                            <span className=\"text-danger\">*</span> Password\r\n                          </Label>\r\n                          <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"examplePassword\"\r\n                            placeholder=\"Password here...\"\r\n                            value={this.state.formData.password}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.password}\r\n                          />\r\n                          {this.state.formErrors.password && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.password}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"examplePasswordRep\">\r\n                            <span className=\"text-danger\">*</span> Repeat\r\n                            Password\r\n                          </Label>\r\n                          <Input\r\n                            type=\"password\"\r\n                            name=\"passwordrep\"\r\n                            id=\"examplePasswordRep\"\r\n                            placeholder=\"Repeat Password here...\"\r\n                            value={this.state.formData.passwordrep}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.passwordrep}\r\n                          />\r\n                          {this.state.formErrors.passwordrep && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.passwordrep}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <FormGroup className=\"mt-3\" check>\r\n                      <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\" />\r\n                      <Label for=\"exampleCheck\" check>\r\n                        Accept our{\" \"}\r\n                        <a\r\n                          href=\"https://colorlib.com/\"\r\n                          onClick={(e) => e.preventDefault()}\r\n                        >\r\n                          Terms and Conditions\r\n                        </a>\r\n                        .\r\n                      </Label>\r\n                    </FormGroup>\r\n                    <div className=\"mt-4 d-flex align-items-center\">\r\n                      <h5 className=\"mb-0\">\r\n                        Already have an account?{\" \"}\r\n                        <a href=\"#/pages/login\" className=\"text-primary\">\r\n                          Sign in\r\n                        </a>\r\n                      </h5>\r\n                      <div className=\"ms-auto\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          className=\"btn-wide btn-pill btn-shadow btn-hover-shine\"\r\n                          size=\"lg\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Create Account\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            </Col>\r\n            <Col lg=\"5\" className=\"d-lg-flex d-xs-none\">\r\n              <div className=\"slider-light\">\r\n                <Slider {...settings}>\r\n                  <div className=\"h-100 d-flex justify-content-center align-items-center bg-premium-dark\">\r\n                    <div\r\n                      className=\"slide-img-bg\"\r\n                      style={{\r\n                        backgroundImage: \"url(\" + bg3 + \")\",\r\n                      }}\r\n                    />\r\n                    <div className=\"slider-content\">\r\n                      <h3>Scalable, Modular, Consistent</h3>\r\n                      <p>\r\n                        Easily exclude the components you don't require.\r\n                        Lightweight, consistent Bootstrap based styles across\r\n                        all elements and components\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Slider>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { baseURL } from \"../../../config/variables\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setUser } from \"../../../reducers/Auth\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport React, { Fragment, Component } from \"react\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nimport bg3 from \"../../../assets/utils/images/originals/citynights.jpg\";\r\n\r\nimport {\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\n\r\nclass RegisterOTP extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      formData: {\r\n        email: \"\",\r\n        OTP: \"\",\r\n      },\r\n      formErrors: {\r\n        email: \"\",\r\n        OTP: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { location } = this.props;\r\n    const queryParams = new URLSearchParams(location.search);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      formData: {\r\n        ...this.state.formData,\r\n        email: queryParams.get(\"email\"),\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      arrows: true,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      fade: true,\r\n      initialSlide: 0,\r\n      autoplay: true,\r\n      adaptiveHeight: true,\r\n    };\r\n\r\n    let { user, setUser } = this.props;\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      this.setState({\r\n        ...this.state,\r\n        formData: {\r\n          ...this.state.formData,\r\n          [name]: value,\r\n        },\r\n      });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      const errors = validateForm(this.state.formData);\r\n      if (Object.keys(errors).length === 0) {\r\n        try {\r\n          this.setState({\r\n            formErrors: {\r\n              email: \"\",\r\n              OTP: \"\",\r\n            },\r\n          });\r\n\r\n          const response = await axios.post(baseURL + \"/user/verifyUser\", {\r\n            email: this.state.formData.email,\r\n            OTP: this.state.formData.OTP,\r\n          });\r\n\r\n          setUser(response.data.verified);\r\n\r\n          localStorage.setItem(\r\n            \"Authorization\",\r\n            response.data.verified.Authorization\r\n          );\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify(response.data.verified.user)\r\n          );\r\n\r\n          this.props.history.push(`/pages/your-site-being-created`);\r\n        } catch (err) {\r\n          toast.error(err.response.data.message);\r\n          this.setState({\r\n            ...this.state,\r\n            formErrors: {\r\n              ...err,\r\n            },\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          ...this.state,\r\n          formErrors: {\r\n            ...errors,\r\n          },\r\n        });\r\n      }\r\n    };\r\n\r\n    const validateForm = (data) => {\r\n      let errors = {};\r\n      if (!data.OTP.trim()) {\r\n        errors.OTP = \"OTP is required.\";\r\n      }\r\n      if (!data.email.trim()) {\r\n        errors.email = \"Email is required.\";\r\n      } else if (!isValidEmail(data.email)) {\r\n        errors.email = \"Invalid email address.\";\r\n      }\r\n      return errors;\r\n    };\r\n\r\n    const isValidEmail = (email) => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return emailRegex.test(email);\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"h-100\">\r\n          <Row className=\"h-100 g-0\">\r\n            <Col\r\n              lg=\"7\"\r\n              md=\"12\"\r\n              className=\"h-100 d-md-flex d-sm-block bg-white justify-content-center align-items-center\"\r\n            >\r\n              <Col lg=\"9\" md=\"10\" sm=\"12\" className=\"mx-auto app-login-box\">\r\n                <div className=\"app-logo\" />\r\n                <h4>\r\n                  <div>Welcome,</div>\r\n                  <span>\r\n                    It only takes a{\" \"}\r\n                    <span className=\"text-success\">few seconds</span> to create\r\n                    your account\r\n                  </span>\r\n                </h4>\r\n                <div>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"exampleEmail\">\r\n                            <span className=\"text-danger\">*</span> Email\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email here...\"\r\n                            value={this.state.formData.email}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.email}\r\n                          />\r\n                          {this.state.formErrors.email && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.email}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"exampleEmail\">\r\n                            <span className=\"text-danger\">*</span> OTP\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"OTP\"\r\n                            id=\"otp\"\r\n                            placeholder=\"OTP here...\"\r\n                            value={this.state.formData.OTP}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.OTP}\r\n                          />\r\n                          {this.state.formErrors.OTP && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.OTP}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"mt-4 d-flex align-items-center\">\r\n                      <div>\r\n                        <Button\r\n                          className=\"btn-wide btn-pill btn-shadow btn-hover-shine\"\r\n                          size=\"lg\"\r\n                          onClick={async () => {\r\n                            const response = await axios.get(\r\n                              baseURL +\r\n                                \"/user/resendCode?email=\" +\r\n                                this.state.formData.email +\r\n                                \"&for=register\"\r\n                            );\r\n                            if (response.data.message == \"Success\")\r\n                              toast.success(\r\n                                `OTP has been resent to ${this.state.formData.email}`\r\n                              );\r\n                          }}\r\n                        >\r\n                          Resend verification email\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"ms-auto\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          className=\"btn-wide btn-pill btn-shadow btn-hover-shine\"\r\n                          size=\"lg\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Verify OTP\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            </Col>\r\n            <Col lg=\"5\" className=\"d-lg-flex d-xs-none\">\r\n              <div className=\"slider-light\">\r\n                <Slider {...settings}>\r\n                  <div className=\"h-100 d-flex justify-content-center align-items-center bg-premium-dark\">\r\n                    <div\r\n                      className=\"slide-img-bg\"\r\n                      style={{\r\n                        backgroundImage: \"url(\" + bg3 + \")\",\r\n                      }}\r\n                    />\r\n                    <div className=\"slider-content\">\r\n                      <h3>Scalable, Modular, Consistent</h3>\r\n                      <p>\r\n                        Easily exclude the components you don't require.\r\n                        Lightweight, consistent Bootstrap based styles across\r\n                        all elements and components\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Slider>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.Auth.user,\r\n  Authorization: state.Auth.Authorization,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setUser: (user) => dispatch(setUser(user)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterOTP);\r\n","import React, { Fragment } from \"react\";\r\nimport { Col, Row, Button, FormGroup, Label, Input } from \"reactstrap\";\r\n\r\n// Layout\r\n\r\nconst RegisterBoxed = ({ match }) => (\r\n  <Fragment>\r\n    <div className=\"h-100 bg-premium-dark\">\r\n      <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n        <Col md=\"8\" className=\"mx-auto app-login-box\">\r\n          <div className=\"app-logo-inverse mx-auto mb-3\" />\r\n          <div className=\"modal-dialog w-100\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-body\">\r\n                <h5 className=\"modal-title\">\r\n                  <h4 className=\"mt-2\">\r\n                    <div>Welcome,</div>\r\n                    <span>\r\n                      It only takes a{\" \"}\r\n                      <span className=\"text-success\">few seconds</span> to\r\n                      create your account\r\n                    </span>\r\n                  </h4>\r\n                </h5>\r\n                <Row className=\"divider\" />\r\n                <Row form>\r\n                  <Col md={12}>\r\n                    <FormGroup>\r\n                      <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email here...\"/>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <FormGroup>\r\n                      <Input type=\"text\" name=\"text\"  id=\"exampleName\" placeholder=\"Name here...\"/>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <FormGroup>\r\n                      <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Password here...\"/>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <FormGroup>\r\n                      <Input type=\"password\" name=\"passwordrep\" id=\"examplePasswordRep\"  placeholder=\"Repeat Password here...\"/>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <FormGroup className=\"mt-3\" check>\r\n                  <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\" />\r\n                  <Label for=\"exampleCheck\" check>\r\n                    Accept our{\" \"}\r\n                    <a href=\"https://colorlib.com/\" onClick={(e) => e.preventDefault()}>\r\n                      Terms and Conditions\r\n                    </a>\r\n                    .\r\n                  </Label>\r\n                </FormGroup>\r\n                <Row className=\"divider\" />\r\n                <h6 className=\"mb-0\">\r\n                  Already have an account?{\" \"}\r\n                  <a href=\"https://colorlib.com/\" onClick={(e) => e.preventDefault()} className=\"text-primary\">\r\n                    Sign in\r\n                  </a>{\" \"}\r\n                  |{\" \"}\r\n                  <a href=\"https://colorlib.com/\" onClick={(e) => e.preventDefault()} className=\"text-primary\">\r\n                    Recover Password\r\n                  </a>\r\n                </h6>\r\n              </div>\r\n              <div className=\"modal-footer d-block text-center\">\r\n                <Button color=\"primary\" className=\"btn-wide btn-pill btn-shadow btn-hover-shine\" size=\"lg\">\r\n                  Create Account\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center text-white opacity-8 mt-3\">\r\n            Copyright &copy; ArchitectUI 2019\r\n          </div>\r\n        </Col>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nexport default RegisterBoxed;\r\n","import axios from \"axios\";\r\nimport { baseURL } from \"../../../config/variables\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport React, { Fragment, Component } from \"react\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nimport bg1 from \"../../../assets/utils/images/originals/city.jpg\";\r\nimport bg2 from \"../../../assets/utils/images/originals/citydark.jpg\";\r\nimport bg3 from \"../../../assets/utils/images/originals/citynights.jpg\";\r\n\r\nimport {\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\n\r\nexport default class ForgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      formData: {\r\n        email: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        passwordrep: \"\",\r\n      },\r\n      formErrors: {\r\n        email: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        passwordrep: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      arrows: true,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      fade: true,\r\n      initialSlide: 0,\r\n      autoplay: true,\r\n      adaptiveHeight: true,\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      this.setState({\r\n        ...this.state,\r\n        formData: {\r\n          ...this.state.formData,\r\n          [name]: value,\r\n        },\r\n      });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      const errors = validateForm(this.state.formData);\r\n      if (Object.keys(errors).length === 0) {\r\n        try {\r\n          await axios.get(\r\n            baseURL + \"/user/forgotPassword?email=\" + this.state.formData.email\r\n          );\r\n          this.props.history.push(\r\n            `/pages/change-password?email=${this.state.formData.email}`\r\n          );\r\n        } catch (err) {\r\n          toast.error(err.response.data.message);\r\n          this.setState({\r\n            ...this.state,\r\n            formErrors: {\r\n              ...err,\r\n            },\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          ...this.state,\r\n          formErrors: {\r\n            ...errors,\r\n          },\r\n        });\r\n      }\r\n    };\r\n\r\n    const validateForm = (data) => {\r\n      let errors = {};\r\n      if (!data.email.trim()) {\r\n        errors.email = \"Email is required.\";\r\n      } else if (!isValidEmail(data.email)) {\r\n        errors.email = \"Invalid email address.\";\r\n      }\r\n      return errors;\r\n    };\r\n\r\n    const isValidEmail = (email) => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return emailRegex.test(email);\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"h-100\">\r\n          <Row className=\"h-100 g-0\">\r\n            <Col lg=\"4\" className=\"d-none d-lg-block\">\r\n              <div className=\"slider-light\">\r\n                <Slider {...settings}>\r\n                  <div className=\"h-100 d-flex justify-content-center align-items-center bg-plum-plate\">\r\n                    <div\r\n                      className=\"slide-img-bg\"\r\n                      style={{\r\n                        backgroundImage: \"url(\" + bg1 + \")\",\r\n                      }}\r\n                    />\r\n                    <div className=\"slider-content\">\r\n                      <h3>Perfect Balance</h3>\r\n                      <p>\r\n                        ArchitectUI is like a dream. Some think it's too good to\r\n                        be true! Extensive collection of unified React Boostrap\r\n                        Components and Elements.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"h-100 d-flex justify-content-center align-items-center bg-premium-dark\">\r\n                    <div\r\n                      className=\"slide-img-bg\"\r\n                      style={{\r\n                        backgroundImage: \"url(\" + bg3 + \")\",\r\n                      }}\r\n                    />\r\n                    <div className=\"slider-content\">\r\n                      <h3>Scalable, Modular, Consistent</h3>\r\n                      <p>\r\n                        Easily exclude the components you don't require.\r\n                        Lightweight, consistent Bootstrap based styles across\r\n                        all elements and components\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"h-100 d-flex justify-content-center align-items-center bg-sunny-morning\">\r\n                    <div\r\n                      className=\"slide-img-bg opacity-6\"\r\n                      style={{\r\n                        backgroundImage: \"url(\" + bg2 + \")\",\r\n                      }}\r\n                    />\r\n                    <div className=\"slider-content\">\r\n                      <h3>Complex, but lightweight</h3>\r\n                      <p>\r\n                        We've included a lot of components that cover almost all\r\n                        use cases for any type of application.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Slider>\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              lg=\"8\"\r\n              md=\"12\"\r\n              className=\"h-100 d-flex bg-white justify-content-center align-items-center\"\r\n            >\r\n              <Col lg=\"6\" md=\"8\" sm=\"12\" className=\"mx-auto app-login-box\">\r\n                <div className=\"app-logo\" />\r\n                <h4>\r\n                  <div>Forgot your Password?</div>\r\n                  <span>Use the form below to recover it.</span>\r\n                </h4>\r\n                <div>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Row form>\r\n                      <Col md={12}>\r\n                        <FormGroup>\r\n                          <Label for=\"exampleEmail\">Email</Label>\r\n                          <Input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"exampleEmail\"\r\n                            placeholder=\"Email here...\"\r\n                            value={this.setState.email}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.email}\r\n                          />\r\n                          {this.state.formErrors.email && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.email}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"mt-4 d-flex align-items-center\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a href=\"#/pages/login\" className=\"text-primary\">\r\n                          Sign in existing account\r\n                        </a>\r\n                      </h6>\r\n                      <div className=\"ms-auto\">\r\n                        <Button color=\"primary\" size=\"lg\" type=\"submit\">\r\n                          Recover Password\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { baseURL } from \"../../../config/variables\";\r\nimport { toast } from \"react-toastify\";\r\nimport { setUser } from \"../../../reducers/Auth\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport React, { Fragment, Component } from \"react\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nimport bg3 from \"../../../assets/utils/images/originals/citynights.jpg\";\r\n\r\nimport {\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\n\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      formData: {\r\n        email: \"\",\r\n        OTP: \"\",\r\n        password: \"\",\r\n      },\r\n      formErrors: {\r\n        email: \"\",\r\n        OTP: \"\",\r\n        password: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { location } = this.props;\r\n    const queryParams = new URLSearchParams(location.search);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      formData: {\r\n        ...this.state.formData,\r\n        email: queryParams.get(\"email\"),\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      arrows: true,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      fade: true,\r\n      initialSlide: 0,\r\n      autoplay: true,\r\n      adaptiveHeight: true,\r\n    };\r\n\r\n    let { user, setUser } = this.props;\r\n\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      this.setState({\r\n        ...this.state,\r\n        formData: {\r\n          ...this.state.formData,\r\n          [name]: value,\r\n        },\r\n      });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      const errors = validateForm(this.state.formData);\r\n      if (Object.keys(errors).length === 0) {\r\n        try {\r\n          this.setState({\r\n            formErrors: {\r\n              email: \"\",\r\n              OTP: \"\",\r\n            },\r\n          });\r\n\r\n          const response = await axios.post(baseURL + \"/user/changePassword\", {\r\n            email: this.state.formData.email,\r\n            OTP: this.state.formData.OTP,\r\n            password: this.state.formData.password,\r\n          });\r\n          this.props.history.push(`/pages/login`);\r\n        } catch (err) {\r\n          toast.error(err.response.data.message);\r\n          this.setState({\r\n            ...this.state,\r\n            formErrors: {\r\n              ...err,\r\n            },\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          ...this.state,\r\n          formErrors: {\r\n            ...errors,\r\n          },\r\n        });\r\n      }\r\n    };\r\n\r\n    const validateForm = (data) => {\r\n      let errors = {};\r\n      if (!data.OTP.trim()) {\r\n        errors.OTP = \"OTP is required.\";\r\n      }\r\n      if (!data.password.trim()) {\r\n        errors.password = \"Password is required.\";\r\n      }\r\n      if (!data.email.trim()) {\r\n        errors.email = \"Email is required.\";\r\n      } else if (!isValidEmail(data.email)) {\r\n        errors.email = \"Invalid email address.\";\r\n      }\r\n      return errors;\r\n    };\r\n\r\n    const isValidEmail = (email) => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return emailRegex.test(email);\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"h-100\">\r\n          <Row className=\"h-100 g-0\">\r\n            <Col\r\n              lg=\"7\"\r\n              md=\"12\"\r\n              className=\"h-100 d-md-flex d-sm-block bg-white justify-content-center align-items-center\"\r\n            >\r\n              <Col lg=\"9\" md=\"10\" sm=\"12\" className=\"mx-auto app-login-box\">\r\n                <div className=\"app-logo\" />\r\n                <h4>\r\n                  <div>Change Password</div>\r\n                  <span>\r\n                    Please enter the\r\n                    <span className=\"text-success\"> OTP </span>\r\n                    received on your email along with\r\n                    <span className=\"text-success\"> New Password</span>.\r\n                  </span>\r\n                </h4>\r\n                <div>\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"exampleEmail\">\r\n                            <span className=\"text-danger\">*</span> Email\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"Email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email here...\"\r\n                            value={this.state.formData.email}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.email}\r\n                          />\r\n                          {this.state.formErrors.email && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.email}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"exampleEmail\">\r\n                            <span className=\"text-danger\">*</span> OTP\r\n                          </Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"OTP\"\r\n                            id=\"OTP\"\r\n                            placeholder=\"OTP here...\"\r\n                            value={this.state.formData.OTP}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.OTP}\r\n                          />\r\n                          {this.state.formErrors.OTP && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.OTP}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label for=\"exampleEmail\">\r\n                            <span className=\"text-danger\">*</span> Password\r\n                          </Label>\r\n                          <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password here...\"\r\n                            value={this.state.formData.password}\r\n                            onChange={handleChange}\r\n                            invalid={!!this.state.formErrors.password}\r\n                          />\r\n                          {this.state.formErrors.password && (\r\n                            <FormFeedback>\r\n                              {this.state.formErrors.password}\r\n                            </FormFeedback>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <div className=\"mt-4 d-flex align-items-center\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a href=\"#/pages/login\" className=\"text-primary\">\r\n                          Sign in existing account\r\n                        </a>\r\n                      </h6>\r\n                      <div className=\"ms-auto\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          className=\"btn-wide btn-pill btn-shadow btn-hover-shine\"\r\n                          size=\"lg\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Change Password\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            </Col>\r\n            <Col lg=\"5\" className=\"d-lg-flex d-xs-none\">\r\n              <div className=\"slider-light\">\r\n                <Slider {...settings}>\r\n                  <div className=\"h-100 d-flex justify-content-center align-items-center bg-premium-dark\">\r\n                    <div\r\n                      className=\"slide-img-bg\"\r\n                      style={{\r\n                        backgroundImage: \"url(\" + bg3 + \")\",\r\n                      }}\r\n                    />\r\n                    <div className=\"slider-content\">\r\n                      <h3>Scalable, Modular, Consistent</h3>\r\n                      <p>\r\n                        Easily exclude the components you don't require.\r\n                        Lightweight, consistent Bootstrap based styles across\r\n                        all elements and components\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </Slider>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.Auth.user,\r\n  Authorization: state.Auth.Authorization,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setUser: (user) => dispatch(setUser(user)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n","import React, { Fragment } from \"react\";\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\n// Layout\r\n\r\nconst ForgotPasswordBoxed = ({ match }) => (\r\n  <Fragment>\r\n    <div className=\"h-100 bg-plum-plate bg-animation\">\r\n      <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n        <Col md=\"6\" className=\"mx-auto app-login-box\">\r\n          <div className=\"app-logo-inverse mx-auto mb-3\" />\r\n          <div className=\"modal-dialog w-100\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <div className=\"h5 modal-title\">\r\n                  Forgot your Password?\r\n                  <h6 className=\"mt-1 mb-0 opacity-8\">\r\n                    <span>Use the form below to recover it.</span>\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div>\r\n                  <Form>\r\n                    <Row form>\r\n                      <Col md={12}>\r\n                        <FormGroup>\r\n                          <Label for=\"exampleEmail\">Email</Label>\r\n                          <Input type=\"email\" name=\"email\" id=\"exampleEmail\"placeholder=\"Email here...\"/>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n                <div className=\"divider\" />\r\n                <h6 className=\"mb-0\">\r\n                  <a href=\"https://colorlib.com/\" onClick={(e) => e.preventDefault()} className=\"text-primary\">\r\n                    Sign in existing account\r\n                  </a>\r\n                </h6>\r\n              </div>\r\n              <div className=\"modal-footer clearfix\">\r\n                <div className=\"float-end\">\r\n                  <Button color=\"primary\" size=\"lg\">\r\n                    Recover Password\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center text-white opacity-8 mt-3\">\r\n            Copyright &copy; ArchitectUI 2019\r\n          </div>\r\n        </Col>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nexport default ForgotPasswordBoxed;\r\n","import React, { Fragment, Component } from \"react\";\r\n\r\nimport { Avatar, Progress } from \"antd\";\r\n\r\nimport { Col, Row } from \"reactstrap\";\r\n\r\nimport * as common from \"../../../Utilities/constants\";\r\nclass NewAccountCreated extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      percent: 0,\r\n    };\r\n\r\n    this.interval = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.setState((prevState) => {\r\n        if (prevState.percent >= 100) {\r\n          clearInterval(this.interval);\r\n          this.props.history.push(\"/home\");\r\n          return { percent: 100 };\r\n        }\r\n        return { percent: prevState.percent + 100 / (60 * 10) };\r\n      });\r\n    }, 100);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"h-100\">\r\n          <Row\r\n            className=\"h-100 g-0\"\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <Col\r\n              xs={11}\r\n              sm={10}\r\n              md={8}\r\n              xl={7}\r\n              xxl={6}\r\n              style={{\r\n                marginTop: \"104px\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  fontSize: \"20px\",\r\n                  fontWeight: \"bold\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                One minute, your site is being created\r\n              </div>\r\n              <div style={{ marginTop: \"40px\", display: \"flex\", gap: \"16px\" }}>\r\n                <Avatar\r\n                  style={{\r\n                    width: \"160px\",\r\n                    minWidth: \"160px\",\r\n                    height: \"160px\",\r\n                    minHeight: \"160px\",\r\n                  }}\r\n                  src={common.DOJO_ICON}\r\n                ></Avatar>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    gap: \"16px\",\r\n                  }}\r\n                >\r\n                  <div style={{ fontWeight: \"500\" }}>\r\n                    While you waiting, meet Dojo, the intellaphant in the room.\r\n                  </div>\r\n                  <div style={{ color: \"gray\" }}>\r\n                    Dojo is an AI assistant that can help you in your pursuit of\r\n                    transforming your organization.\r\n                  </div>\r\n                  <div style={{ color: \"gray\" }}>\r\n                    While you wait, read Dojo’s advice on transforming your\r\n                    business:\r\n                  </div>\r\n                  <div style={{ color: \"gray\", fontStyle: \"italic\" }}>\r\n                    Hi, I'm Dojo. Your Intelliphant in the room. I play a\r\n                    pivotal role in bolstering your business agility and\r\n                    decision advantage strategies. By harnessing the power of AI\r\n                    in me, your organizations can swiftly adapt to changing\r\n                    market conditions, make data-driven decisions, and gain a\r\n                    competitive edge.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Progress\r\n                style={{ width: \"75%\", marginTop: \"32px\" }}\r\n                percent={this.state.percent}\r\n                showInfo={false}\r\n                strokeColor=\"rgba(0, 161, 8, 0.86)\"\r\n              />\r\n              <div\r\n                style={{\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Thanks for signing up! Dojo is working on your Pivitle Cloud\r\n                site.\r\n              </div>\r\n              <div\r\n                style={{\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                This won’t take more than a minute or two. You’ll be taken there\r\n                once it’s ready.\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewAccountCreated;\r\n","import React, { Fragment, Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"../../../config/variables\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport {\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nclass UpdateUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      formData: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        passwordrep: \"\",\r\n      },\r\n      formErrors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        passwordrep: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { location } = this.props;\r\n    const queryParams = new URLSearchParams(location.search);\r\n\r\n    localStorage.setItem(\"Authorization\", queryParams.get(\"token\"));\r\n  }\r\n\r\n  render() {\r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      this.setState({\r\n        ...this.state,\r\n        formData: {\r\n          ...this.state.formData,\r\n          [name]: value,\r\n        },\r\n      });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n\r\n      const errors = validateForm(this.state.formData);\r\n      if (Object.keys(errors).length === 0) {\r\n        try {\r\n          this.setState({\r\n            formErrors: {\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              password: \"\",\r\n              passwordrep: \"\",\r\n            },\r\n          });\r\n\r\n          const response = await axios.put(\r\n            baseURL + \"/user\",\r\n            {\r\n              firstName: this.state.formData.firstName,\r\n              lastName: this.state.formData.lastName,\r\n              password: this.state.formData.password,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\r\n                  \"Authorization\"\r\n                )}`,\r\n              },\r\n            }\r\n          );\r\n\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data.data));\r\n\r\n          this.props.history.push(\"/home\");\r\n\r\n          this.setState({\r\n            formData: {\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              password: \"\",\r\n              passwordrep: \"\",\r\n            },\r\n          });\r\n        } catch (err) {\r\n          toast.error(err.response.data.message);\r\n          this.setState({\r\n            ...this.state,\r\n            formErrors: {\r\n              ...err,\r\n            },\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          ...this.state,\r\n          formErrors: {\r\n            ...errors,\r\n          },\r\n        });\r\n      }\r\n    };\r\n\r\n    const validateForm = (data) => {\r\n      let errors = {};\r\n      if (!data.firstName.trim()) {\r\n        errors.firstName = \"First Name is required.\";\r\n      }\r\n      if (!data.lastName.trim()) {\r\n        errors.lastName = \"Last Name is required.\";\r\n      }\r\n      if (!data.password) {\r\n        errors.password = \"Password is required.\";\r\n      }\r\n      if (!data.passwordrep) {\r\n        errors.passwordrep = \"Please re-enter password.\";\r\n      } else if (data.password !== data.passwordrep) {\r\n        errors.passwordrep = \"Passwords must match.\";\r\n      }\r\n      return errors;\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"h-100\">\r\n          <Row\r\n            className=\"h-100 g-0\"\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          >\r\n            <Col\r\n              xs={10}\r\n              sm={8}\r\n              md={6}\r\n              lg={5}\r\n              xl={4}\r\n              xxl={3}\r\n              style={{\r\n                marginTop: \"104px\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  border: \"1px solid #bbbbbb\",\r\n                  borderRadius: \"12px\",\r\n                  padding: \"32px 32px 48px\",\r\n                  backgroundColor: \"white\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    color: \"#0182e1\",\r\n                    fontSize: \"28px\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  Pivitle\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    marginTop: \"8px\",\r\n                    textAlign: \"center\",\r\n                    fontSize: \"18px\",\r\n                  }}\r\n                >\r\n                  Email address verification\r\n                </div>\r\n                <div style={{ textAlign: \"center\", fontSize: \"14px\" }}>\r\n                  Finish setting up your account\r\n                </div>\r\n                <Form\r\n                  onSubmit={handleSubmit}\r\n                  style={{\r\n                    marginTop: \"8px\",\r\n                  }}\r\n                >\r\n                  <FormGroup>\r\n                    <Label for=\"exampleName\" style={{ fontSize: \"14px\" }}>\r\n                      <span className=\"text-danger\">*</span> First Name\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"firstName\"\r\n                      id=\"firstName\"\r\n                      placeholder=\"First Name here...\"\r\n                      value={this.state.formData.firstName}\r\n                      onChange={handleChange}\r\n                      invalid={!!this.state.formErrors.firstName}\r\n                    />\r\n                    {this.state.formErrors.firstName && (\r\n                      <FormFeedback>\r\n                        {this.state.formErrors.firstName}\r\n                      </FormFeedback>\r\n                    )}\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleName\" style={{ fontSize: \"14px\" }}>\r\n                      <span className=\"text-danger\">*</span> Last Name\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"lastName\"\r\n                      id=\"lastName\"\r\n                      placeholder=\"Last Name here...\"\r\n                      value={this.state.formData.lastName}\r\n                      onChange={handleChange}\r\n                      invalid={!!this.state.formErrors.lastName}\r\n                    />\r\n                    {this.state.formErrors.lastName && (\r\n                      <FormFeedback>\r\n                        {this.state.formErrors.lastName}\r\n                      </FormFeedback>\r\n                    )}\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label for=\"examplePassword\" style={{ fontSize: \"14px\" }}>\r\n                      <span className=\"text-danger\">*</span> Password\r\n                    </Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"examplePassword\"\r\n                      placeholder=\"Password here...\"\r\n                      value={this.state.formData.password}\r\n                      onChange={handleChange}\r\n                      invalid={!!this.state.formErrors.password}\r\n                    />\r\n                    {this.state.formErrors.password && (\r\n                      <FormFeedback>\r\n                        {this.state.formErrors.password}\r\n                      </FormFeedback>\r\n                    )}\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label\r\n                      for=\"examplePasswordRep\"\r\n                      style={{ fontSize: \"14px\" }}\r\n                    >\r\n                      <span className=\"text-danger\">*</span> Repeat Password\r\n                    </Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"passwordrep\"\r\n                      id=\"examplePasswordRep\"\r\n                      placeholder=\"Repeat Password here...\"\r\n                      value={this.state.formData.passwordrep}\r\n                      onChange={handleChange}\r\n                      invalid={!!this.state.formErrors.passwordrep}\r\n                    />\r\n                    {this.state.formErrors.passwordrep && (\r\n                      <FormFeedback>\r\n                        {this.state.formErrors.passwordrep}\r\n                      </FormFeedback>\r\n                    )}\r\n                  </FormGroup>\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      paddingInline: \"8px\",\r\n                      fontSize: \"12px\",\r\n                    }}\r\n                  >\r\n                    By signing up, I accept the Atlassian Cloud Terms of Service\r\n                    and acknowledge the Privacy Policy.\r\n                  </div>\r\n                  <Button\r\n                    style={{\r\n                      width: \"100%\",\r\n                      marginTop: \"8px\",\r\n                      backgroundColor: \"#0182e1\",\r\n                      borderColor: \"#0182e1\",\r\n                    }}\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateUser;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\n// USER PAGES\r\n\r\nimport Login from \"./Login/\";\r\nimport LoginBoxed from \"./LoginBoxed/\";\r\n\r\nimport Register from \"./Register/\";\r\nimport RegisterOTP from \"./RegisterOTP/\";\r\nimport RegisterBoxed from \"./RegisterBoxed/\";\r\n\r\nimport ForgotPassword from \"./ForgotPassword/\";\r\nimport ChangePassword from \"./ChangePassword/\";\r\nimport ForgotPasswordBoxed from \"./ForgotPasswordBoxed/\";\r\n\r\nimport NewAccountCreated from \"./NewAccountCreated\";\r\n\r\nimport UpdateUser from \"./UpdateUser\";\r\n\r\nconst UserPages = ({ match }) => (\r\n  <Fragment>\r\n    <div className=\"app-container\">\r\n      {/* User Pages */}\r\n\r\n      <Route path={`${match.url}/login`} component={Login} />\r\n      <Route path={`${match.url}/login-boxed`} component={LoginBoxed} />\r\n      <Route path={`${match.url}/register`} component={Register} />\r\n      <Route path={`${match.url}/verifyUser`} component={RegisterOTP} />\r\n      <Route path={`${match.url}/register-boxed`} component={RegisterBoxed} />\r\n      <Route path={`${match.url}/forgot-password`} component={ForgotPassword} />\r\n      <Route path={`${match.url}/change-password`} component={ChangePassword} />\r\n      <Route\r\n        path={`${match.url}/forgot-password-boxed`}\r\n        component={ForgotPasswordBoxed}\r\n      />\r\n      <Route\r\n        path={`${match.url}/your-site-being-created`}\r\n        component={NewAccountCreated}\r\n      />\r\n      <Route path={`${match.url}/updatePassword`} component={UpdateUser} />\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nexport default UserPages;\r\n"],"names":["baseURL","Login","Component","constructor","props","super","this","state","formData","email","password","formErrors","render","user","setUser","Authorization","localStorage","getItem","history","push","handleChange","e","name","value","target","setState","validateForm","data","errors","trim","isValidEmail","test","_jsx","Fragment","children","className","_jsxs","Row","Col","lg","Slider","dots","infinite","speed","arrows","slidesToShow","slidesToScroll","fade","initialSlide","autoplay","adaptiveHeight","style","backgroundImage","bg1","bg3","bg2","md","sm","href","Form","onSubmit","async","preventDefault","Object","keys","length","response","axios","post","setItem","JSON","stringify","toast","success","concat","firstName","lastName","err","error","message","FormGroup","Label","for","Input","type","id","placeholder","onChange","invalid","FormFeedback","check","Button","color","size","ToastContainer","connect","Auth","dispatch","_ref","match","form","onClick","Register","passwordrep","RegisterOTP","OTP","componentDidMount","location","queryParams","URLSearchParams","search","get","verified","ForgotPassword","ChangePassword","NewAccountCreated","percent","interval","setInterval","prevState","clearInterval","componentWillUnmount","display","justifyContent","xs","xl","xxl","marginTop","flexDirection","alignItems","fontSize","fontWeight","textAlign","gap","Avatar","width","minWidth","height","minHeight","src","common","fontStyle","Progress","showInfo","strokeColor","UpdateUser","border","borderRadius","padding","backgroundColor","put","headers","paddingInline","borderColor","Route","path","url","component","LoginBoxed","RegisterBoxed","ForgotPasswordBoxed"],"sourceRoot":""}